syntax = "proto3";

package model;

option java_multiple_files = true;
option java_outer_classname = "OverlayK8sModel";
option java_package = "com.overlay.k8s.model";
option go_package = "./model";

/*
  Message is to transmit a piece of data, securely, from one process to one or more processes via
  Publish/Subscribe or Reuest/Reply
 */
message Message {
  // The source uuid identifier of the message sender
  string source_uuid = 1;
  // The destination uuid/or multicast group name of the message receiver.
  string destination = 2;
  // To uniquely identify the source message, the sender process maintain a sequence number.
  int32 sequence = 3;
  // Priority of this Message for the handler callback.
  Priority priority = 4;
  // The protobuf marshaled data, encoded to base64 string
  string data = 5;
  // The type name of the serialized data
  string type = 6;
  // Action to invoke with this data on the service point
  Action action = 7;
}

// The list of available priorities, where 0 is the least priority and 7 is the most priority
enum Priority {
  P0 = 0;
  P1 = 1;
  P2 = 2;
  P3 = 3;
  P4 = 4;
  P5 = 5;
  P6 = 6;
  P7 = 7;
}

// Set of actions to run on the service point.
enum Action {
  Action_Invalid = 0;
  Action_Post = 1;
  Action_Put = 2;
  Action_Patch = 3;
  Action_Delete = 4;
  Action_Get = 5;
}

// The config for the overlay network
message OverlayK8sConfig {
  int64 max_data_size = 1;
  uint64 default_tx_queue_size = 2;
  uint64 default_rx_queue_size = 3;
  uint32 default_switch_port = 4;
}